name: Deploy and Run MPI

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        id: apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform apply -auto-approve \
            -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var "key_name=your-key-pair" \
            -var "private_key_path=~/.ssh/your-key-pair.pem"

      - name: Get Instance IPs
        run: |
          echo "::set-output name=master_ip::$(terraform output -raw master_ip)"
          echo "::set-output name=worker_ips::$(terraform output -json worker_ips | jq -r '.[]')"
        id: outputs

      - name: Configure SSH
        run: |
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ steps.outputs.master_ip }} >> ~/.ssh/known_hosts
          for ip in ${{ steps.outputs.worker_ips }}; do ssh-keyscan -H $ip >> ~/.ssh/known_hosts; done

      - name: Distribute Code to Instances
        run: |
          scp -o StrictHostKeyChecking=no mpi.py ubuntu@${{ steps.outputs.master_ip }}:/home/ubuntu/
          scp -o StrictHostKeyChecking=no -r images ubuntu@${{ steps.outputs.master_ip }}:/home/ubuntu/
          for ip in ${{ steps.outputs.worker_ips }}; do
            scp -o StrictHostKeyChecking=no mpi.py ubuntu@$ip:/home/ubuntu/
            scp -o StrictHostKeyChecking=no -r images ubuntu@$ip:/home/ubuntu/
          done

      - name: Run MPI Program
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ steps.outputs.master_ip }} "mpiexec -n 4 -host ${{ steps.outputs.master_ip }},${{ steps.outputs.worker_ips }} python3 /home/ubuntu/mpi.py"
